{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAOA;AACP;AAAA;;AAAA;;AACA;AACA;AACA;;;;iBACA;AAAA;AAAA;AACA;AACA;;;;;;AAEAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AAAA;;AACO;AACP,YAAQ,8DAAUC,OAAV,CAAR,EAAkB;AAClBC;AACAD;AACA;;AACA;AACA,6DAA0D,qDAAG;AAAA,mBAAS,wDAAOE,IAAP,IAAOD,sDAAP,GAAOA,oBAAhB;AAAA,WAAH,CAA1D;AACA;;AACA,mBAAeE,mDAAf,CAAyB;AACzB;AACA;AACAC;AACA,aAFA,MAGA;AACAA;AACA;AACA;;AACAC;AACK,SAVL;AAWA;;AACA;AACA;;AACA;AACA;AACAC;;AACAC;AAAA;AAAA;AACA,SAJA,MAKA;AACA;AACAD;;AACAC;AAAA;AAAA;AACA,SAJA,MAKA;AACA;AACAD;;AACAC;AAAA;AAAA;AACA,SAJA,MAKA;AACA,kDAAgDC,OAAhD,EAAyDA,GAAzD,EAAyD;AACzDH;AACA;AACA,SAJA,MAKA;AACA;AACA;;AACAD;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDO;AAAA;AAAA;AAAA;AACP;;AACA,YAAQ,4DAASK,iBAAT,CAAR,EAAiB;AACjBC;AACA,SAFA,MAGA,IAAa,gEAAWD,iBAAX,CAAb,EAAwB;AACxBE;AACA;;AACA,aAAS,gEAAWA,SAAX,CAAT,EAAoB;AACpBA,sBAAoBC,mDAApB;AACA;;AACA,mBAAeT,mDAAf,CAAyB;AACzB,oBAAoB,4DAASU,OAAT,IACpBA,OADoB,GAEpB,0BAFA;AAGA;AACAC,oBADA;AACAJ,0BADA;AACAN;AADA;AAGK,SAPL;AAQA;;AACA;AACA,YAAYU,KAAZ,GAAwCC,KAAxC,CAAYD,KAAZ;AAAA,YAAYJ,MAAZ,GAAwCK,KAAxC,CAAYL,MAAZ;AAAA,YAAYN,UAAZ,GAAwCW,KAAxC,CAAYX,UAAZ;AACAA;;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA;;AACAW;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCO;AACP;AAAA;AAAA;AACA;;UACAC;AACA;AAAA;;AACA;AACA;;;;iBACA;AACA;AACA;;;;;;UAEAC;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AAGA;;;;iBACA;AACA;AACA;;;;QAP8BC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVvB;AACP;AAAA;AAAA;AACA;;UACAC;AACA;AAAA;;AACA;AACA;;;;iBACA;AACA;AACA,uCAAqC,4EAAiBC,mBAAjB,EAAiB,aAAjB,CAArC;;AACA;AACAA;AACA;AACA;;AACA;AACA;;;;;;UAEAC;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AAFA;AAGA;;;;iBACA;AACA;AACA;AACA;;;iBACA,2BACA;;;;QAVkCC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB3B;AAAA;AACP;AAAA;AAAA;AACA;;UACAC;AACA;AAAA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;;;;;UAEAC;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AAJA;AAKA;;;;iBACA;AACA;AACA;;AACA;AACAC;AACA,aAFA,CAGA;AACAC;AACA;AACA;;AACA;AACA;;;iBACA;AACA;;AACA;AACAA;AACA,aAFA,MAGA;AACA;AACAA;AACA;;AACAA;AACA;AACA;;;;QA9BkCR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX3B;AACPS,qBADO;AAEPC;AAFO;;AAIA;AAAA;AACP;AAAA;AAAA;AACA;;UACAC;AACA;AAAA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;;;;;UAEAC;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;;;;iBACA;AACA;AACA;;AACA;AACA;AACA;AACA,eAFA,MAGA;AACA;AACA;AACA;AACA;;;iBACA;AACA,gBAAgBC,SAAhB,GAAwC,IAAxC,CAAgBA,SAAhB;AAAA,gBAAgBC,UAAhB,GAAwC,IAAxC,CAAgBA,UAAhB;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;iBACA;AACA;;AACA;AACA,yCAAuC,4EAAiB,IAAjB,EAAiBC,QAAjB,CAAvC;AACA;AACA;;;iBACA;AACA;AACA;AACA,aAFA,CAGA;AACA;AACA;AACA;AACA;;;iBACA;AACA,gBAAgBC,UAAhB,GAAwC,IAAxC,CAAgBA,UAAhB;AAAA,gBAAgBC,SAAhB,GAAwC,IAAxC,CAAgBA,SAAhB;;AACA;AACAD;AACA;;AACA;;AACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;;;iBACA;AACA;AACA;;;;QA5DiCE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB1B,uCAAiF;AAAA,YAAjFzB,SAAiF,uEAArC0B,mDAAqC;AAAA,YAAhCC,MAAgC,uEAArBC,4DAAqB;AACxF;AAAA;AAAA;AACA;;UACAC;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;;;;;UAEAC;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA,aALA,MAMA;AACA;AAA6FrC;AAA7F;;AACA;AACA;AACA,eAFA,MAGA;AACA;AACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;AACA;AACA,aAHA,MAIA;AACA;AACA;AACA;;;iBACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACAsC;AACA;AACA;AACA;AACA;;;;QAjDqCC;;AAmDrC;AACA,YAAYvC,UAAZ,GAAyBwC,GAAzB,CAAYxC,UAAZ;AACAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEO;AAAA;AAAAF;AAAA;;AACP;AACA;;AACA;AACA2C;AACA;;AACA;AACA;AACA,SAPA;AAQA;;UACAC;AACA;AAAA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;;;;;UAEAC;;;;;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,0BAAwBvC,OAAxB,EAAiCA,GAAjC,EAAiC;AACjC;AACA;;AACA,2BAAwBA,QAAxB,EAAiCA,IAAjC,EAAiC;AACjC;;AACA,uBAAqB,4GAAiBwC,UAAjB,EAAiBA,UAAjB,EAAiBxC,EAAjB,CAArB;AACA;;AAbA;AAcA;;;;iBACA;AACA;AACA;;AACA;AACA;;AACA;AACAyC;AACA;AACA;AACA;;;iBACA,2BACA;;;iBACA;AACA;AACA;;AACA;AACA;AACA,eAFA,MAGA;AACA;AACA;AACA;AACA;;;iBACA;AACA;;AACA;AACAxB;AACA,aAFA,CAGA;AACA;AACA;AACA;;AACA;AACA;;;;QAjDuCW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCpBhCc;;;;;AACP;AAAA;;AAAA;AAEA;;;;iBACA;AAAA;AACA;AACA;;;;QAN4BC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCArBC;;;;;AACP;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AAJA;AAKA;;;;iBACA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;iBACA;AAAA;AACA;AACA;;;iBACA;AAAA;;AACA;AACA;AACA;;AACAC;AACA;AACA;;;iBACA;AACA;AACA;AACA;;AACA;;AACA;;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;;;iBACA;AACA;AACA;;AACA;AACA;AACA,aAFA,CAGA;AACAC;AACAC;AACA;;AACA;AACA;AACA;AACA;AACA;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACAC;AACA;;AACA;AACA;AACA;;AACA;AACA;;;;QA5EiCC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCA1BC;;;;;AACP,kDAAoD;AAAA;;AAAA,cAApDC,GAAoD,uEAAbC,qDAAa;;AAAA;;AACpD;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACS,WAPT;AAQA;AACA;AA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","names":["Scheduler","options","resultSelector","args","_Observable__WEBPACK_IMPORTED_MODULE_3__","subscriber","setupSubscription","sourceObj","unsubscribe","i","periodOrScheduler","period","scheduler","_scheduler_async__WEBPACK_IMPORTED_MODULE_2__","dueTime","index","state","MapToOperator","MapToSubscriber","_Subscriber__WEBPACK_IMPORTED_MODULE_0__","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__","TakeWhileOperator","TakeWhileSubscriber","result","destination","leading","trailing","ThrottleOperator","ThrottleSubscriber","_hasValue","_sendValue","duration","_throttled","_trailing","_OuterSubscriber__WEBPACK_IMPORTED_MODULE_0__","_scheduler_async__WEBPACK_IMPORTED_MODULE_0__","config","_throttle__WEBPACK_IMPORTED_MODULE_1__","ThrottleTimeOperator","ThrottleTimeSubscriber","throttled","_Subscriber__WEBPACK_IMPORTED_MODULE_2__","arg","project","WithLatestFromOperator","WithLatestFromSubscriber","observable","toRespond","Action","_Subscription__WEBPACK_IMPORTED_MODULE_0__","AsyncAction","clearInterval","errored","errorValue","actions","_Action__WEBPACK_IMPORTED_MODULE_0__","AsyncScheduler","now","_Scheduler__WEBPACK_IMPORTED_MODULE_0__","action","_AsyncScheduler__WEBPACK_IMPORTED_MODULE_0__","_AsyncAction__WEBPACK_IMPORTED_MODULE_1__","val","CardComponent","selectors","inputs","item","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","HeaderComponent","NavComponent","fixed","height","subtitle","SharedModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","declarations","_step_step_component__WEBPACK_IMPORTED_MODULE_3__","_header_header_component__WEBPACK_IMPORTED_MODULE_1__","_nav_nav_component__WEBPACK_IMPORTED_MODULE_2__","_card_card_component__WEBPACK_IMPORTED_MODULE_0__","imports","exports","StepComponent","title","image","NgsgClassService","element","classList","add","PLACEHOLDER_DEFAULT_CLASS","remove","DROPPED_DEFAULT_CLASS","SELECTED_DEFAULT_CLASS","factory","providedIn","NgsgElementsHelper","allElements","parentNode","children","Array","prototype","indexOf","call","ScrollHelperService","document","window","defaultView","event","scrollPoints","scrollSpeed","currentPosition","pageY","scrollY","isTopScrollNeeded","top","scrollBy","DEFAULT_SCROLLSPEED","behavior","isBottomScrollNeeded","bottom","scrollPointTop","SCROLL_BUFFER","scrollPointBottom","innerHeight","_angular_common__WEBPACK_IMPORTED_MODULE_1__","ChangeAction","NgsgSelectionService","classService","ngsgStore","rxjs__WEBPACK_IMPORTED_MODULE_3__","selectionKeyPressed$","selectionKeyPressed","selectionChange$","pipe","subscribe","selectionChange","handleSelectionChange","resetSelectedItems","key","group","getSelectedItems","forEach","removeSelectedClass","node","ADD","addSelectedClass","addSelectedItem","originalIndex","_helpers_element_ngsg_elements_helper__WEBPACK_IMPORTED_MODULE_0__","REMOVE","removeSelectedItem","keyboardEvent","COMMAND_KEY","CONTROL_KEY","keyup","dragedElement","hasSelectedItems","selected","next","_angular_core__WEBPACK_IMPORTED_MODULE_9__","selector","NgsgItemDirective","el","sortService","selectionService","reflectService","ngsgEventService","scrollHelperService","_angular_core__WEBPACK_IMPORTED_MODULE_7__","rxjs__WEBPACK_IMPORTED_MODULE_8__","dropped$","destroy$","nativeElement","autoScroll","scrollIfNecessary","changes","sortGridItemChanges","ngSortGridItems","sortGridItems","currentValue","hasGroup","ngSortGridGroup","initState","setItems","draggable","complete","occuredOnHost","selectElementIfNoSelection","target","initSort","sort","preventDefault","hasItems","console","warn","previousOrder","getItems","endSort","currentOrder","reflectChanges","sorted","isItemCurrentlySelected","updateSelectedDragItem","find","matches","hostBindings","ctx","NgsgModule","_ngsg_item_directive__WEBPACK_IMPORTED_MODULE_0__","NgsgEventsService","rxjs__WEBPACK_IMPORTED_MODULE_0__","NgsgReflectService","items","selectedElements","selectedElementIndices","getSelectedElementsIndices","selectedItems","sortedIndices","dropIndex","findDropIndex","length","splice","pop","getReflectedItems","beforeSelection","slice","afterSelection","selectedElementIndexes","push","map","selectedElement","isDropInSelection","collection","dropElement","dragElment","_angular_core__WEBPACK_IMPORTED_MODULE_2__","NgsgSortService","dragIndex","getFirstSelectItem","dragElements","hoverIndex","getSibling","dragElement","insertedNode","insertBefore","addPlaceHolderClass","updateDropedItem","nextSibling","removePlaceHolderClass","addDroppedClass","removeDroppedClass","_angular_core__WEBPACK_IMPORTED_MODULE_4__","NgsgStoreService","Map","classes","set","get","updatedItems","filter","setSelectedItems","has"],"sources":["webpack:///node_modules/rxjs/_esm2015/internal/Scheduler.js","webpack:///node_modules/rxjs/_esm2015/internal/observable/fromEvent.js","webpack:///node_modules/rxjs/_esm2015/internal/observable/timer.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/mapTo.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/takeUntil.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/takeWhile.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/throttle.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/Action.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","webpack:///node_modules/rxjs/_esm2015/internal/scheduler/async.js","webpack:///node_modules/rxjs/_esm2015/internal/util/isNumeric.js","webpack:///projects/ng-sortgrid-demo/src/app/shared/card/card.component.ts","webpack:///projects/ng-sortgrid-demo/src/app/shared/card/card.component.html","webpack:///projects/ng-sortgrid-demo/src/app/shared/header/header.component.ts","webpack:///projects/ng-sortgrid-demo/src/app/shared/header/header.component.html","webpack:///projects/ng-sortgrid-demo/src/app/shared/nav/nav.component.html","webpack:///projects/ng-sortgrid-demo/src/app/shared/nav/nav.component.ts","webpack:///projects/ng-sortgrid-demo/src/app/shared/shared.module.ts","webpack:///projects/ng-sortgrid-demo/src/app/shared/step/step.component.html","webpack:///projects/ng-sortgrid-demo/src/app/shared/step/step.component.ts","webpack:///projects/ng-sortgrid/src/lib/helpers/class/ngsg-class.service.ts","webpack:///projects/ng-sortgrid/src/lib/helpers/element/ngsg-elements.helper.ts","webpack:///projects/ng-sortgrid/src/lib/helpers/scroll/scroll-helper.service.ts","webpack:///projects/ng-sortgrid/src/lib/mutliselect/ngsg-selection.service.ts","webpack:///projects/ng-sortgrid/src/lib/ngsg-item.directive.ts","webpack:///projects/ng-sortgrid/src/lib/ngsg.module.ts","webpack:///projects/ng-sortgrid/src/lib/shared/ngsg-events.service.ts","webpack:///projects/ng-sortgrid/src/lib/sort/reflection/ngsg-reflect.service.ts","webpack:///projects/ng-sortgrid/src/lib/sort/sort/ngsg-sort.service.ts","webpack:///projects/ng-sortgrid/src/lib/store/ngsg-store.service.ts"],"sourcesContent":["export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nconst toString = (() => Object.prototype.toString)();\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    let unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = () => source.removeEventListener(eventName, handler, options);\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = () => source.off(eventName, handler);\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = () => source.removeListener(eventName, handler);\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (let i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const async = new AsyncScheduler(AsyncAction);\n","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngsg-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent {\n\n  @Input() item: number;\n}\n","<div>\n  <h1 style=\"color: darkslategray\">\n    {{ item }}\n  </h1>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngsg-demo-header',\n  templateUrl: 'header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n}\n","<header class=\"header py-5 mb-5\">\n  <div class=\"container h-100\">\n    <div class=\"row h-100 align-items-center\">\n      <div class=\"col-lg-12\">\n        <h1 class=\"display-4 text-white mt-5 mb-2\">Draggable sort grid with multiselction</h1>\n        <h2 class=\"lead mb-5 text-white\">Use the ngSortgridItem directive to turn your lists into a grid where single\n          or even multiple files can be sorted via drag & drop.</h2>\n      </div>\n    </div>\n  </div>\n</header>\n","<nav class=\"navbar navbar-expand-lg navbar-dark\"\n     [ngStyle]=\"{'height': height}\"\n     [ngClass]=\"{'fixed-top': fixed}\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\" style=\"font-size: 30px\">\n      <img class=\"logo\" src=\"assets/ng-sortgrid-logo.png\"/>\n      <small class=\"subtitle\" *ngIf=\"subtitle\">{{subtitle}}</small>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"https://twitter.com/kreuzercode\" target=\"_blank\">\n            <i class=\"icon fab fa-twitter fa-2x\"></i>\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"https://github.com/kreuzerk/ng-sortgrid\" target=\"_blank\">\n            <i class=\"icon fab fa-github fa-2x\"></i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngsg-demo-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n  @Input() fixed = false;\n  @Input() height = '140px';\n  @Input() subtitle;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport {CardComponent} from './card/card.component';\nimport {HeaderComponent} from './header/header.component';\nimport {NavComponent} from './nav/nav.component';\nimport {StepComponent} from './step/step.component';\n\n@NgModule({\n  declarations: [StepComponent, HeaderComponent, NavComponent, CardComponent],\n  exports: [StepComponent, HeaderComponent, NavComponent, CardComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","<h5 class=\"step-title\">{{title}}</h5>\n<img *ngIf=\"image\" [src]=\"'assets/' + image\" class=\"step-image\"/>\n<hr/>\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngsg-demo-step',\n  templateUrl: 'step.component.html',\n  styleUrls: ['step.component.css']\n})\nexport class StepComponent {\n\n  @Input() title: string;\n  @Input() image: string;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgClassService {\n  private SELECTED_DEFAULT_CLASS = 'ng-sg-selected';\n  private PLACEHOLDER_DEFAULT_CLASS = 'ng-sg-placeholder';\n  private DROPPED_DEFAULT_CLASS = 'ng-sg-dropped';\n\n  public addPlaceHolderClass(element: Element): void {\n    element.classList.add(this.PLACEHOLDER_DEFAULT_CLASS);\n  }\n\n  public removePlaceHolderClass(element: Element): void {\n    element.classList.remove(this.PLACEHOLDER_DEFAULT_CLASS);\n  }\n\n  public addDroppedClass(element: Element): void {\n    element.classList.add(this.DROPPED_DEFAULT_CLASS);\n  }\n\n  public removeDroppedClass(element: Element): void {\n    element.classList.remove(this.DROPPED_DEFAULT_CLASS);\n  }\n\n  public addSelectedClass(element: Element): void {\n    element.classList.add(this.SELECTED_DEFAULT_CLASS);\n  }\n\n  public removeSelectedClass(element: Element): void {\n    element.classList.remove(this.SELECTED_DEFAULT_CLASS);\n  }\n\n}\n","export class NgsgElementsHelper {\n\n  public static findIndex(element: Element): number {\n    const allElements = element.parentNode.children;\n    return Array.prototype.indexOf.call(allElements, element);\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nexport interface ScrollPoints {\n  top?: number;\n  bottom?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollHelperService {\n\n  private window: WindowProxy;\n  private DEFAULT_SCROLLSPEED = 50;\n  private SCROLL_BUFFER = 50;\n\n  constructor(@Inject(DOCUMENT) private document) {\n    this.window = document.defaultView;\n  }\n\n  public scrollIfNecessary(event: any, scrollPoints: ScrollPoints = {}, scrollSpeed?: number): void {\n    const currentPosition = event.pageY - this.window.scrollY;\n\n    if (this.isTopScrollNeeded(currentPosition, scrollPoints.top)) {\n      this.window.scrollBy({top: -scrollSpeed || -this.DEFAULT_SCROLLSPEED, behavior: 'smooth'});\n      return;\n    }\n\n    if (this.isBottomScrollNeeded(currentPosition, scrollPoints.bottom)) {\n      this.window.scrollBy({top: scrollSpeed || this.DEFAULT_SCROLLSPEED, behavior: 'smooth'});\n    }\n  }\n\n  private isTopScrollNeeded(currentPosition: number, scrollPointTop: number): boolean {\n    return scrollPointTop ? currentPosition < scrollPointTop :\n      currentPosition < this.SCROLL_BUFFER;\n  }\n\n  private isBottomScrollNeeded(currentPosition: number, scrollPointBottom: number): boolean {\n    return scrollPointBottom ? currentPosition > scrollPointBottom :\n      currentPosition > this.window.innerHeight - this.SCROLL_BUFFER;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {fromEvent, merge, NEVER, Observable, Subject} from 'rxjs';\nimport {filter, mapTo, switchMap, withLatestFrom} from 'rxjs/operators';\n\nimport {NgsgClassService} from '../helpers/class/ngsg-class.service';\nimport {NgsgElementsHelper} from '../helpers/element/ngsg-elements.helper';\nimport {NgsgStoreService} from '../store/ngsg-store.service';\n\nenum ChangeAction {\n  ADD,\n  REMOVE\n}\n\ninterface SelectionChange {\n  key: string;\n  item: Element;\n  action: ChangeAction;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgSelectionService {\n  private COMMAND_KEY = 'Meta';\n  private CONTROL_KEY = 'Control';\n\n  private selectionChange$ = new Subject<SelectionChange>();\n\n  constructor(private classService: NgsgClassService, private ngsgStore: NgsgStoreService) {\n    const selectionKeyPressed$ = this.selectionKeyPressed();\n    this.selectionChange$\n      .pipe(withLatestFrom(selectionKeyPressed$))\n      .subscribe(([selectionChange, selectionKeyPressed]) => {\n        selectionKeyPressed\n          ? this.handleSelectionChange(selectionChange)\n          : this.resetSelectedItems(selectionChange.key);\n      });\n  }\n\n  private resetSelectedItems(group: string): void {\n    this.ngsgStore.getSelectedItems(group).forEach(item => this.classService.removeSelectedClass(item.node));\n    this.ngsgStore.resetSelectedItems(group);\n  }\n\n  private handleSelectionChange(selectionChange: SelectionChange): void {\n    if (selectionChange.action === ChangeAction.ADD) {\n      this.classService.addSelectedClass(selectionChange.item);\n      this.ngsgStore.addSelectedItem(selectionChange.key, {\n        node: selectionChange.item,\n        originalIndex: NgsgElementsHelper.findIndex(selectionChange.item)\n      });\n    }\n    if (selectionChange.action === ChangeAction.REMOVE) {\n      this.classService.removeSelectedClass(selectionChange.item);\n      this.ngsgStore.removeSelectedItem(selectionChange.key, selectionChange.item);\n    }\n  }\n\n  private selectionKeyPressed(): Observable<boolean> {\n    const selectionKeyPressed = fromEvent(window, 'keydown').pipe(\n      filter(\n        (keyboardEvent: KeyboardEvent) =>\n          keyboardEvent.key === this.COMMAND_KEY || keyboardEvent.key === this.CONTROL_KEY\n      ),\n      mapTo(true)\n    );\n    const keyup = fromEvent(window, 'keyup').pipe(mapTo(false));\n    return merge(selectionKeyPressed, keyup);\n  }\n\n  public selectElementIfNoSelection(group: string, dragedElement: Element): void {\n    if (this.ngsgStore.hasSelectedItems(group)) {\n      return;\n    }\n    this.ngsgStore.addSelectedItem(group, {\n      node: dragedElement,\n      originalIndex: NgsgElementsHelper.findIndex(dragedElement)\n    });\n  }\n\n  public updateSelectedDragItem(key: string, item: Element, selected: boolean): void {\n    this.selectionChange$.next({\n      key,\n      item,\n      action: selected ? ChangeAction.ADD : ChangeAction.REMOVE\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {takeUntil, takeWhile, throttleTime} from 'rxjs/operators';\n\nimport {NgsgElementsHelper} from './helpers/element/ngsg-elements.helper';\nimport {ScrollHelperService} from './helpers/scroll/scroll-helper.service';\nimport {NgsgSelectionService} from './mutliselect/ngsg-selection.service';\nimport {NgsgEventsService} from './shared/ngsg-events.service';\nimport {NgsgOrderChange} from './shared/ngsg-order-change.model';\nimport {NgsgReflectService} from './sort/reflection/ngsg-reflect.service';\nimport {NgsgSortService} from './sort/sort/ngsg-sort.service';\nimport {NgsgStoreService} from './store/ngsg-store.service';\n\nconst selector = '[ngSortgridItem]';\n\n@Directive({selector})\nexport class NgsgItemDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input() ngSortGridGroup = 'defaultGroup';\n  @Input() ngSortGridItems: any[];\n  @Input() scrollPointTop: number;\n  @Input() scrollPointBottom: number;\n  @Input() scrollSpeed: number;\n  @Input() autoScroll = false;\n\n  @Output() sorted = new EventEmitter<NgsgOrderChange<any>>();\n\n  private selected = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    public el: ElementRef,\n    private sortService: NgsgSortService,\n    private selectionService: NgsgSelectionService,\n    private reflectService: NgsgReflectService,\n    private ngsgStore: NgsgStoreService,\n    private ngsgEventService: NgsgEventsService,\n    private scrollHelperService: ScrollHelperService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.ngsgEventService.dropped$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => this.selected = false);\n\n    fromEvent<DragEvent>(this.el.nativeElement, 'drag').pipe(\n      throttleTime(20),\n      takeUntil(this.destroy$),\n      takeWhile(() => this.autoScroll)\n    ).subscribe(() => {\n        this.scrollHelperService.scrollIfNecessary(event, {\n          top: this.scrollPointTop,\n          bottom: this.scrollPointBottom\n        }, this.scrollSpeed);\n      }\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const sortGridItemChanges = changes.ngSortGridItems;\n    const sortGridItems = sortGridItemChanges.currentValue ? sortGridItemChanges.currentValue : [];\n\n    if (!this.ngsgStore.hasGroup(this.ngSortGridGroup)) {\n      this.ngsgStore.initState(this.ngSortGridGroup, sortGridItems);\n      return;\n    }\n    this.ngsgStore.setItems(this.ngSortGridGroup, sortGridItems);\n  }\n\n  ngAfterViewInit(): void {\n    this.el.nativeElement.draggable = true;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  @HostListener('dragstart', ['$event'])\n  dragStart(event): void {\n    if (!this.occuredOnHost(event)) {\n      return;\n    }\n    this.selectionService.selectElementIfNoSelection(this.ngSortGridGroup, event.target);\n    this.sortService.initSort(this.ngSortGridGroup);\n  }\n\n  @HostListener('dragenter')\n  dragEnter(): void {\n    if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n      return;\n    }\n    this.sortService.sort(this.el.nativeElement);\n  }\n\n  @HostListener('dragover', ['$event'])\n  dragOver(event): boolean {\n    if (event.preventDefault) {\n      // Necessary. Allows us to drop.\n      event.preventDefault();\n    }\n    return false;\n  }\n\n  @HostListener('dragend')\n  drop(): void {\n    if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n      return;\n    }\n\n    if (!this.ngsgStore.hasItems(this.ngSortGridGroup)) {\n      console.warn(`Ng-sortgrid: No items provided - please use [sortGridItems] to pass in an array of items -\n      otherwhise the ordered items can not be emitted in the (sorted) event`);\n      return;\n    }\n    const previousOrder = [...this.ngsgStore.getItems(this.ngSortGridGroup)];\n    this.sortService.endSort();\n    const currentOrder = this.reflectService.reflectChanges(this.ngSortGridGroup, this.el.nativeElement);\n    this.sorted.next({previousOrder, currentOrder});\n    this.ngsgStore.resetSelectedItems(this.ngSortGridGroup);\n    this.ngsgEventService.dropped$.next();\n  }\n\n  @HostListener('click')\n  clicked(): void {\n    this.selected = !this.isItemCurrentlySelected();\n    this.selectionService.updateSelectedDragItem(this.ngSortGridGroup, this.el.nativeElement, this.selected);\n  }\n\n  private isItemCurrentlySelected(): boolean {\n    const index = NgsgElementsHelper.findIndex(this.el.nativeElement);\n    return !!this.ngsgStore.getSelectedItems(this.ngSortGridGroup)\n      .find(element => element.originalIndex === index);\n  }\n\n  private occuredOnHost(event): boolean {\n    return event.target.matches(selector);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgsgItemDirective } from './ngsg-item.directive';\n\n@NgModule({\n  declarations: [NgsgItemDirective],\n  exports: [NgsgItemDirective]\n})\nexport class NgsgModule {}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgEventsService {\n  public dropped$ = new Subject();\n}\n","import { Injectable } from '@angular/core';\n\nimport {NgsgElementsHelper} from '../../helpers/element/ngsg-elements.helper';\nimport {NgsgDragelement} from '../../shared/ngsg-dragelement.model';\nimport {NgsgStoreService} from '../../store/ngsg-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgReflectService {\n  constructor(private ngsgStore: NgsgStoreService) {}\n\n  public reflectChanges(key: string, element: Element): any[] {\n    const items = this.ngsgStore.getItems(key);\n    const selectedElements = this.ngsgStore.getSelectedItems(key);\n    const selectedElementIndices = this.getSelectedElementsIndices(selectedElements);\n    const selectedItems = this.getSelectedItems(items, selectedElementIndices);\n    const sortedIndices = selectedElementIndices.sort();\n    const dropIndex = this.findDropIndex(selectedElements, element);\n\n    while (sortedIndices.length > 0) {\n      items.splice(sortedIndices.pop(), 1);\n    }\n\n    const result = this.getReflectedItems(items, selectedItems, dropIndex);\n    this.ngsgStore.setItems(key, result);\n    return result;\n  }\n\n  private getReflectedItems(items: any, selectedItems: any, dropIndex: number): any[] {\n    const beforeSelection = items.slice(0, dropIndex);\n    const afterSelection = items.slice(dropIndex, items.length);\n    return [...beforeSelection, ...selectedItems, ...afterSelection];\n  }\n\n  private getSelectedItems(items: any[], selectedElementIndexes: number[]): any[] {\n    const selectedItems = [];\n    selectedElementIndexes.forEach(index => {\n      selectedItems.push(items[index]);\n    });\n    return selectedItems;\n  }\n\n  private getSelectedElementsIndices(selectedElements: NgsgDragelement[]): number[] {\n    return selectedElements.map((selectedElement: NgsgDragelement) => selectedElement.originalIndex);\n  }\n\n  private findDropIndex(selectedElements: NgsgDragelement[], element: Element): number {\n    if (this.isDropInSelection(selectedElements, element)) {\n      return NgsgElementsHelper.findIndex(selectedElements[0].node);\n    }\n    return NgsgElementsHelper.findIndex(element);\n  }\n\n  private isDropInSelection(collection: NgsgDragelement[], dropElement: Element): boolean {\n    return !!collection.find((dragElment: NgsgDragelement) => dragElment.node === dropElement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport {NgsgClassService} from '../../helpers/class/ngsg-class.service';\nimport {NgsgElementsHelper} from '../../helpers/element/ngsg-elements.helper';\nimport {NgsgDragelement} from '../../shared/ngsg-dragelement.model';\nimport {NgsgStoreService} from '../../store/ngsg-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgSortService {\n  private dragIndex: number;\n  private dragElements: NgsgDragelement[];\n\n  constructor(\n    private classService: NgsgClassService,\n    private ngsgStore: NgsgStoreService\n  ) {}\n\n  public initSort(group: string): void {\n    this.dragIndex = this.ngsgStore.getFirstSelectItem(group).originalIndex;\n    this.dragElements = this.ngsgStore.getSelectedItems(group);\n  }\n\n  public sort(dropElement: Element): void {\n    const hoverIndex = NgsgElementsHelper.findIndex(dropElement);\n    const el = this.getSibling(dropElement, this.dragIndex, hoverIndex);\n\n    if (this.isDropInSelection(el)) {\n      return;\n    }\n    this.dragElements.forEach((dragElement: NgsgDragelement) => {\n      const insertedNode = dropElement.parentNode.insertBefore(dragElement.node, el.node);\n      this.classService.addPlaceHolderClass(insertedNode as Element);\n    });\n    this.dragIndex = NgsgElementsHelper.findIndex(this.dragElements[0].node);\n  }\n\n  public endSort(): void {\n    this.dragElements.forEach((dragElement: NgsgDragelement) => {\n      this.updateDropedItem(dragElement.node);\n    });\n  }\n\n  private getSibling(dropElement: any, dragIndex: number, hoverIndex: number): NgsgDragelement | null {\n    if (dragIndex < hoverIndex) {\n      return { node: dropElement.nextSibling, originalIndex: hoverIndex + 1 };\n    }\n    return { node: dropElement, originalIndex: hoverIndex };\n  }\n\n  private isDropInSelection(dropElement: NgsgDragelement): boolean {\n    return !!this.dragElements.find((dragElment: NgsgDragelement) => dragElment.node === dropElement.node);\n  }\n\n  private updateDropedItem(item: Element): void {\n    this.classService.removePlaceHolderClass(item);\n    this.classService.addDroppedClass(item);\n    this.classService.removeSelectedClass(item);\n    timer(500).subscribe(() => this.classService.removeDroppedClass(item));\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgsgDragelement} from '../shared/ngsg-dragelement.model';\n\n// TODO add interfaces for classes\nexport interface NgsgState {\n  items: any[];\n  classes: any;\n  selectedItems: NgsgDragelement[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgStoreService {\n  private state = new Map<string, NgsgState>();\n\n  public initState(group: string, items: any[] = [], classes: any = {}): void {\n    this.state.set(group, {items: [...items], classes, selectedItems: []});\n  }\n\n  public addSelectedItem(group: string, dragElement: NgsgDragelement): void {\n    this.state.get(group).selectedItems.push(dragElement);\n  }\n\n  public removeSelectedItem(group: string, item: Element): void {\n    const updatedItems = this.state.get(group).selectedItems\n      .filter((dragElement: NgsgDragelement) => dragElement.node !== item);\n    this.setSelectedItems(group, updatedItems);\n  }\n\n  public setItems(group: string, items: any): void {\n    this.state.get(group).items = [...items];\n  }\n\n  public getItems(group: string): any[] {\n    return this.state.get(group).items;\n  }\n\n  public hasItems(group: string): boolean {\n    return this.getItems(group).length > 0;\n  }\n\n  public hasGroup(group: string): boolean {\n    return this.state.has(group);\n  }\n\n  public getSelectedItems(group: string): NgsgDragelement[] {\n    return this.state.get(group).selectedItems;\n  }\n\n  public setSelectedItems(group: string, selectedItems: any[]): void {\n    this.state.get(group).selectedItems = [...selectedItems];\n  }\n\n  public getFirstSelectItem(group: string): NgsgDragelement {\n    return this.state.get(group).selectedItems[0];\n  }\n\n  public hasSelectedItems(group: string): boolean {\n    return this.getSelectedItems(group).length > 0;\n  }\n\n  public resetSelectedItems(group: string): void {\n    this.setSelectedItems(group, []);\n  }\n\n  public getClasses(group: string): any[] {\n    return this.state.get(group).classes;\n  }\n}\n"]}